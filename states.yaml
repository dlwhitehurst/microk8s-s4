# Define 'Service' to expose backend application deployment
apiVersion: v1
kind: Service
metadata:
  name: states  
spec:
  selector:  # backend application pod lables should match these
    app: states
    tier: application
  ports:
  - protocol: "TCP"
    port: 8080
    targetPort: 3000
  type: LoadBalancer   # use NodePort, if you are not running Kubernetes on cloud
---
# Configure 'Deployment' of backend application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: states
  labels: 
    app: states
    tier: application
spec:
  replicas: 2    # Number of replicas of back-end application to be deployed
  selector:
    matchLabels: # backend application pod labels should match these
      app: states
      tier: application
  template:
    metadata:
      labels: # Must macth 'Service' and 'Deployment' labels
        app: states
        tier: application  
    spec:                 
      containers: 
      - name: smarts 
        image: localhost:32000/states:registry   
        env:   # Setting Enviornmental Variables
          - name: DB_HOST   # Setting Database host address from configMap
            valueFrom: 
              configMapKeyRef:
                name: db-config-map  # name of configMap
                key: host
          - name: DB_SCHEMA  # Setting Database name from configMap
            valueFrom:
              configMapKeyRef:
                name: db-config-map 
                key: schema
          - name: DB_USERNAME  # Setting Database username from Secret
            valueFrom:
              secretKeyRef:
                name: db-secret # Secret Name
                key: username
          - name: DB_PASSWORD # Setting Database password from Secret
            valueFrom:
              secretKeyRef:
                name: db-secret
                key: password     
        ports:
        - containerPort: 3000
